install.packages("latex2exp")
library(latex2exp)
?TeX
x <- seq(0, 4, length.out=100)
alpha <- 1:5
plot(x, xlim=c(0, 4), ylim=c(0, 10),
xlab='x', ylab=latex2exp::TeX("$\alpha  x^\alpha$, where $\alpha \in \{1 \ldots 5\}$"),
type='n', main=latex2exp::TeX("Using $\LaTeX$ for plotting in base graphics!", bold=TRUE))
TeX("$\\alpha$")
set.seed(7)
d <- rnorm(8)
mean(d[1:4])
3*mean(d[1:4])
Rcpp::sourceCpp("journal/04-16/main.cpp")
Rcpp::sourceCpp("journal/04-16/main.cpp")
Rcpp::sourceCpp("journal/04-16/main.cpp")
source("~/Documents/University/ethz/semester_3/Thesis/R/march/solt/play.R")
getwd()
source("~/.active-rstudio-document")
source("~/Documents/University/ethz/semester_3/Thesis/R/march/solt/play.R")
source("~/Documents/University/ethz/semester_3/Thesis/R/march/solt/play.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
cat('\14')
print('hello')
# Auxiliary functions ####
fn_get_tree <- function(layers) {
tree <- c()
for(i in 1:length(layers)) { tree <- c(tree,layers[[i]][,2]) }
tree <- tree[!is.na(tree)]
tree <- sort(unique(tree))
return(tree)
}
# Solt's algorithm   ####
p_max <- 6
N <- 2^p_max
solts_tree <- vector(mode = 'list', length = 2^p_max)
removed_idx <- vector(mode = 'list', length = 2^p_max) # solts_tree[[9]] = 4 5 6 7 8 9 & solts_tree[[10]] = 4 6 7 8 9 10 => removed_idx[[10]] = 2
layers <- vector(mode = 'list', length = p_max+2) # "layers" is core of Solts algo and is uptaded at every time point.
layers[[1]] <- matrix(c(1,7,
1,8), 2, 2, byrow = TRUE)
layers[[2]] <- cbind(1, 4:7)
layers[[3]] <- cbind(c(NA,NA, 1, 1),c(NA, NA, 4,6))
for(i in 4:length(layers)) { layers[[i]] <- matrix(NA, nrow = 4, ncol = 2) }
solts_tree[[8]] <- fn_get_tree(layers)
tmp <- matrix(NA, nrow = p_max + 2, ncol = 2)
counter <- rep(0, p_max + 2)
counter[1:5]<-c(1, 0, 0, 0, 1)
for(time in 9:2^p_max) {
tmp[1,] <- layers[[1]][2,]
layers[[1]][1,] <- layers[[1]][2,]
layers[[1]][2,] <- c(1,time)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
layers[[i]][1:3,] <- layers[[i]][2:4,]
tmp[i,] <- layers[[i]][4,]
layers[[i]][4,] <- tmp[i-1,]
}
solts_tree[[time]] <- fn_get_tree(layers)
removed_idx[[time]] <- fn_removed_idx(solts_tree[[time-1]],solts_tree[[time]])
tmp <- matrix(NA, nrow = p_max + 2, ncol = 2)
# Printing ####
#cat('##################', time, '#################### \n')
# for(j in 1:length(layers)){
#     if(! all( is.na( layers[[j]] ) ) ) { print( layers[[j]] ) }
# }
#cat("\nSolt's tree:", 'length;', length(solts_tree[[time]]), '|', solts_tree[[time]], '\n')
}
for (tree in solts_tree) {
cat(tree, '\n')
}
source("~/Documents/University/ethz/semester_3/Thesis/R/march/solt/play.R")
getwd()
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R", echo=TRUE)
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R", echo=TRUE)
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/R/march/solt/play.R")
Rcpp::sourceCpp("journal/04-18/main.cpp")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/debugging/Solt.R")
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- layers[[15]] <- matrix(NA,8,2)
tmp <- matrix(NA, 15,2)
counter = rep(0, 15)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:4096){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
for(i in 2:(which(counter==0)[1]+1)){
#original updates
tmp[i,] <- layers[[i]][1,]
layers[[i]][8,] <- layers[[i]][7,]
layers[[i]][7,] <- layers[[i]][6,]
layers[[i]][6,] <- layers[[i]][5,]
layers[[i]][5,] <- layers[[i]][4,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
}
}
layers
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:4096){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
layers
2^20
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:32){
print(layers[1:5])
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:32){
print('------------------------------\n')
print(layers[1:5])
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:32){
cat('Ttime ------------------------------\n')
print(layers[1:5])
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:32){
cat('Ttime ------------------------------\n')
print(layers[1:5])
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:32){
cat('Ttime ------------------------------\n')
print(layers[1:4])
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- matrix(NA,4,2)
tmp <- matrix(NA, 14,2)
counter = rep(0, 14)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:32){
cat('Ttime ------------------------------\n')
print(layers[1:4])
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
tmp[i,] <- layers[[i]][1,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
tmp <- matrix(NA, 14,2)
}
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- layers[[15]] <- layers[[16]] <- matrix(NA,16,2)
tmp <- matrix(NA, 16,2)
counter = rep(0, 16)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:16){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
layers[[3]][1,] <- layers[[1]][2,]
for(i in 2:(which(counter==0)[1]+2)){
tmp[i,] <- layers[[i]][1,]
layers[[i]][16:2,] <- layers[[i]][15:1,]
layers[[i]][1,] <- tmp[i-1,]
}
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
}
}
layers
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- layers[[15]] <- layers[[16]] <- matrix(NA,16,2)
tmp <- matrix(NA, 16,2)
counter = rep(0, 16)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:128){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
layers[[3]][1,] <- layers[[1]][2,]
for(i in 2:(which(counter==0)[1]+2)){
tmp[i,] <- layers[[i]][1,]
layers[[i]][16:2,] <- layers[[i]][15:1,]
layers[[i]][1,] <- tmp[i-1,]
}
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
}
}
layers
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- layers[[15]] <- matrix(NA,8,2)
tmp <- matrix(NA, 15,2)
counter = rep(0, 15)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:128){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
for(i in 2:(which(counter==0)[1]+1)){
#original updates
tmp[i,] <- layers[[i]][1,]
layers[[i]][8,] <- layers[[i]][7,]
layers[[i]][7,] <- layers[[i]][6,]
layers[[i]][6,] <- layers[[i]][5,]
layers[[i]][5,] <- layers[[i]][4,]
layers[[i]][4,] <- layers[[i]][3,]
layers[[i]][3,] <- layers[[i]][2,]
layers[[i]][2,] <- layers[[i]][1,]
layers[[i]][1,] <- tmp[i-1,]
}
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
}
}
layers[1:10]
print('############')
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- layers[[15]] <- layers[[16]] <- matrix(NA,16,2)
tmp <- matrix(NA, 16,2)
counter = rep(0, 16)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:128){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
layers[[3]][1,] <- layers[[1]][2,]
for(i in 2:(which(counter==0)[1]+2)){
tmp[i,] <- layers[[i]][1,]
layers[[i]][16:2,] <- layers[[i]][15:1,]
layers[[i]][1,] <- tmp[i-1,]
}
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
}
}
layers[1:10]
layers=list()
layers[[1]] <- matrix(NA,2,2)
layers[[2]] <- layers[[3]] <- layers[[4]] <- layers[[5]] <- layers[[6]] <-
layers[[7]] <-layers[[8]] <- layers[[9]] <- layers[[10]] <-
layers[[11]] <-layers[[12]] <- layers[[13]] <- layers[[14]] <- layers[[15]] <- layers[[16]] <- matrix(NA,16,2)
tmp <- matrix(NA, 16,2)
counter = rep(0, 16)
counter[1] <- 1
counter[1:5]<-c(1,0,0,0,0)
for(Ttime in 1:128){
tmp[1,] <- c(layers[[1]][1,])
layers[[1]][2,] <- layers[[1]][1,]
layers[[1]][1,] <- c(1,Ttime)
layers[[2]][1,] <- layers[[1]][2,]
#layers[[3]][1,] <- layers[[1]][2,]
for(i in 2:(which(counter==0)[1]+2)){
tmp[i,] <- layers[[i]][1,]
layers[[i]][16:2,] <- layers[[i]][15:1,]
layers[[i]][1,] <- tmp[i-1,]
}
for(i in 2:which(counter==0)[1]){
counter[i] <- (counter[i]+1)%%2
}
}
layers[1:10]
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
Rcpp::sourceCpp("~/zz.cpp")
1.048775*60
2700 * 7 * 7
132300 / 60
2205/60
pows <- seq(5, 0, length.out = 10)
customDelta <- c(- .5 ^ pows, .5 ^ pows) %>% sort
customDelta <- customDelta[c(-9, -10, -11, -12)]
library(magrittr)
pows <- seq(5, 0, length.out = 10)
customDelta <- c(- .5 ^ pows, .5 ^ pows) %>% sort
customDelta <- customDelta[c(-9, -10, -11, -12)]
customDelta
length(customDelta)
pows <- seq(5, 0, length.out = 10)
customDelta <- c(- .5 ^ pows, .5 ^ pows) %>% sort
customDelta
customDelta[c(-9, -10, -11, -12)]
Rcpp::sourceCpp("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.cpp")
Rcpp::sourceCpp("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.cpp")
Rcpp::sourceCpp("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.cpp")
Rcpp::sourceCpp("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.cpp")
Rcpp::sourceCpp("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.cpp")
source("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.R")
source("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.R")
source("~/Documents/University/ethz/semester_3/Thesis/lastSprint/main.R")
source("~/Documents/University/ethz/semester_3/Thesis/R/NoToAlzheimer/easyClasses/forests/manual1.R")
setwd("~/Documents/University/ethz/semester_3/Thesis/Dlm/simulations")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/simulations/ddall.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/simulations/ddall.R")
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/simulations/ddall.R")
View(summary_df)
View(grouped)
View(outDF)
View(sim_grid)
View(summary_df)
View(detection_delay)
View(data_label)
View(summary_df)
source("~/Documents/University/ethz/semester_3/Thesis/Dlm/simulations/ddall.R")
source("~/Documents/University/ethz/semester_3/Thesis/R/NoToAlzheimer/algorithmic/addLayer/fn_algo_layer.R")
fn_algo_layer(5)
fn_algo_layer(9)
